"use strict";(self.webpackChunkyui_docs_yui_ibc_solidity=self.webpackChunkyui_docs_yui_ibc_solidity||[]).push([[567],{6661:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return d},toc:function(){return c},default:function(){return u}});var i=n(7462),o=n(3366),r=(n(7294),n(3905)),a=["components"],l={sidebar_position:4},s="Deploy contracts",d={unversionedId:"minitoken/deploy",id:"minitoken/deploy",isDocsHomePage:!1,title:"Deploy contracts",description:"The next step is to deploy contracts.",source:"@site/docs/minitoken/deploy.md",sourceDirName:"minitoken",slug:"/minitoken/deploy",permalink:"/yui-docs/yui-ibc-solidity/minitoken/deploy",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Create a contract",permalink:"/yui-docs/yui-ibc-solidity/minitoken/contract"},next:{title:"Execute token transfer",permalink:"/yui-docs/yui-ibc-solidity/minitoken/interaction"}},c=[{value:"Registering MiniToken with IBCHandler",id:"registering-minitoken-with-ibchandler",children:[],level:2},{value:"Setup environment and deploy",id:"setup-environment-and-deploy",children:[],level:2}],p={toc:c};function u(e){var t=e.components,n=(0,o.Z)(e,a);return(0,r.kt)("wrapper",(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"deploy-contracts"},"Deploy contracts"),(0,r.kt)("p",null,"The next step is to deploy contracts."),(0,r.kt)("h2",{id:"registering-minitoken-with-ibchandler"},"Registering MiniToken with IBCHandler"),(0,r.kt)("p",null,"In this tutorial, we use Truffle for deploying contracts.\nAs usual, deployment of contracts and other migration management is done in the files under ",(0,r.kt)("inlineCode",{parentName:"p"},"migrations")," directory.\nFor more information about Truffle's migration, please refer to ",(0,r.kt)("a",{parentName:"p",href:"https://www.trufflesuite.com/docs/truffle/getting-started/running-migrations"},"here"),"."),(0,r.kt)("p",null,"Use ",(0,r.kt)("inlineCode",{parentName:"p"},"IBCHandler.bindPort")," to call the appropriate contract according to the receiving port specified in the Packet when IBCHandler receives it."),(0,r.kt)("p",null,"As shown in ",(0,r.kt)("inlineCode",{parentName:"p"},"migrations/2_token_migration.js"),", after deploying each contract, MiniToken is tied to the ",(0,r.kt)("inlineCode",{parentName:"p"},"transfer")," port."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const PortTransfer = "transfer";\nibcHandler.bindPort(PortTransfer, MiniToken.address);\n')),(0,r.kt)("h2",{id:"setup-environment-and-deploy"},"Setup environment and deploy"),(0,r.kt)("p",null,"You can build the required environment by simply running the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"make setup\n")),(0,r.kt)("p",null,"Specifically, the above command will do the following"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Build the ledger and Relayer"),(0,r.kt)("li",{parentName:"ul"},"Start the two ledger networks"),(0,r.kt)("li",{parentName:"ul"},"Deploy a Contract to the ledgers"),(0,r.kt)("li",{parentName:"ul"},"Start Relayer and execute Handshake between the two ledgers")),(0,r.kt)("p",null,"To exit the environment, execute the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"make down\n")))}u.isMDXComponent=!0}}]);